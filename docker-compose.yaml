version: "3"
services:
  app:
    container_name: auth-jwt-demo
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
      - "8081:8081"
    volumes:
      - .:/app
    # command: ["sh", "-c", "pip install debugpy && python -m debugpy --wait-for-client --listen 0.0.0.0:8085 -m flask run --debugger -h 0.0.0.0 -p 8000 --reload"]
    networks:
      - auth-jwt
    working_dir: /app
    depends_on:
      - mysql-svc
      - redis-svc
      

  mysql-svc:
    # Current latest version MySQL8.x
    image: mysql:latest
    container_name: my-mysql
    restart: always
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    environment:
      - MYSQL_USER=hieu
      - MYSQL_PASSWORD=hieu2001
      - MYSQL_ROOT_PASSWORD=hieu2001
      - MYSQL_DATABASE=mydb
    ports:
      - 3306:3306
    networks:
      - auth-jwt
    volumes:
      - mysqldata:/var/lib/mysql
      # - ./mysql-config:/etc/mysql/conf.d
      # - /data/mysql/data:/data/
      # - /data/mysql/my.cnf:/etc/mysql/my.cnf


  redis-svc:
    image: redis/redis-stack-server:latest
    container_name: redis-devspace
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/redis-master-data
    environment:
      REDIS_PASSWORD: hieu2001
    networks:
      - auth-jwt
    command: redis-server --loglevel warning --requirepass hieu2001
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 2

networks:
  auth-jwt:
    driver: bridge

volumes:
  mysqldata:
    driver: local
  redis_data:
    driver: local